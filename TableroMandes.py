import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime

# Estilo personalizado
st.markdown("""
    <style>
    .stApp {
        background-color: #ccf2cc; /* Verde esmeralda claro */
    }
    .css-1d391kg {
        padding: 1rem;
    }
    </style>
""", unsafe_allow_html=True)

# Fechas
inicio = datetime(2025, 7, 22)
fecha_limite = datetime(2025, 9, 5)
hoy = datetime.now()
dias_totales = (fecha_limite - inicio).days + 1
dias_transcurridos = (hoy - inicio).days + 1
dias_transcurridos = max(1, min(dias_transcurridos, dias_totales))
dias_restantes = (fecha_limite - hoy).days

# Lista de personas
nombres = [
    "Maite", "Miguel I.", "Katia", "Sebastian", "Walter",
    "Gabriela", "Nemesys", "Miguel G", "Juli√°n", "Deivis x 2",
    "Marcos", "Cristian estupi√±an", "Ermes", "Maria judith",
    "Yuli Ramon", "Laura", "Erick"
]

# Porcentaje de avance
progreso_porcentaje = round((dias_transcurridos / dias_totales) * 100)

# Crear DataFrame
df = pd.DataFrame({
    "Nombre": [f"<b>{n}</b>" for n in nombres],  # Nombres en negrita con HTML
    "D√≠as": [dias_transcurridos] * len(nombres),
    "Porcentaje": [progreso_porcentaje] * len(nombres),
    "Texto": [f"<b style='font-size:16px'>{dias_transcurridos} d√≠as | {progreso_porcentaje}%</b>" for _ in nombres]
})

# T√≠tulo
st.title("Mandes")

# Fecha l√≠mite
st.write(f"üìÖ Fecha l√≠mite para cumplir: {fecha_limite.strftime('%Y-%m-%d')}")

# Mensaje de progreso
if dias_restantes > 10:
    st.success(f"üü¢ Quedan {dias_restantes} d√≠as para cumplir el objetivo.")
elif 5 < dias_restantes <= 10:
    st.warning(f"üü† Atenci√≥n: Quedan solo {dias_restantes} d√≠as.")
elif 0 < dias_restantes <= 5:
    st.error(f"üî¥ ¬°Urgente! Quedan solamente {dias_restantes} d√≠as.")
else:
    st.error("‚õî La fecha l√≠mite ya ha pasado.")

# Crear gr√°fico
fig = px.bar(
    df,
    x="D√≠as",
    y="Nombre",
    orientation="h",
    text="Texto",
    color="D√≠as",
    color_continuous_scale="RdYlGn_r",
    range_x=[0, dias_totales]
)

# Estilo gr√°fico
fig.update_traces(
    textposition="inside",
    insidetextanchor="start",
    textfont_color="black",
    hovertemplate='%{y}: %{x} d√≠as'
)

fig.update_layout(
    autosize=True,
    height=60 * len(nombres),  # Se ajusta din√°micamente seg√∫n n√∫mero de personas
    xaxis_title="D√≠as transcurridos",
    yaxis_title="Nombre",
    yaxis=dict(autorange="reversed", tickfont=dict(size=13)),
    plot_bgcolor="#ccf2cc",
    paper_bgcolor="#ccf2cc",
    margin=dict(l=20, r=20, t=30, b=20),
    coloraxis_colorbar=dict(title="D√≠a actual")
)

# Mostrar gr√°fico con ajuste autom√°tico
st.plotly_chart(fig, use_container_width=True)
